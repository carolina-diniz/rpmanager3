import { ActionRowBuilder, ButtonBuilder, ButtonInteraction, CommandInteraction } from "discord.js";
import { buttonsList, createButton } from "../../../../core/buttons/buttonConstructor";
import getChannelsCreated from "../../services/getChannelsCreated";
const { general } = buttonsList;

export default {
  title: "üìÇ Criar Canais",
  description:
    "Aqui voc√™ pode criar os canais necess√°rios para o sistema de registro:\n\n" +
    "- Canal de Registro: Onde os novos usu√°rios enviar√£o as informa√ß√µes de seus personagens.\n\n" +
    "- Canal de Aprova√ß√£o: Onde os moderadores poder√£o aprovar ou reprovar as solicita√ß√µes.\n\n" +
    "Utilize os bot√µes abaixo para criar os canais ou voltar √† configura√ß√£o principal.",
  footer: {
    text: "home/createChannels",
  },
  buttons: async (
    interaction: CommandInteraction | ButtonInteraction
  ): Promise<ActionRowBuilder<ButtonBuilder>> => {
    const channelsCreated = await getChannelsCreated(interaction.guildId!);
    return new ActionRowBuilder<ButtonBuilder>().addComponents(
      createButton({
        customId: "createchannels_createregister",
        label: "Criar Canal de Registro",
        emoji: "üìù",
        disabled: channelsCreated.isEntryChannelCreated,
      }),
      createButton({
        customId: "createchannels_createapproval",
        label: "Criar Canal de Aprova√ß√£o",
        emoji: "‚úÖ",
        disabled: channelsCreated.isApprovalChannelCreated,
      }),
      general.back,
      general.close
    );
  },
};
